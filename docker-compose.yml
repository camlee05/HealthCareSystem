version: "3.9"

services:
  # --- Database ---
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hospital
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hospital-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hospital"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Eureka Discovery Server ---
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - hospital-net
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- API Gateway ---
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - hospital-net
    depends_on:
      - discovery-server
    volumes:
      - ./api-gateway/src/main/resources/application.properties:/config/application.properties

  # --- USER SERVICE ---
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    networks:
      - hospital-net
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_started
    restart: always
    volumes:
      - ./user-service/src/main/resources/templates:/app/templates
    environment:
      SPRING_THYMELEAF_PREFIX: file:/app/templates/
      SPRING_THYMELEAF_SUFFIX: .html
      SPRING_THYMELEAF_CACHE: "false"

  # --- APPOINTMENT SERVICE ---
  appointment-service:
    build: ./appointment-service
    container_name: appointment-service
    ports:
      - "8082:8082"
    networks:
      - hospital-net
    depends_on:
      - postgres
      - discovery-server
      - user-service

  # --- DIAGNOSIS SERVICE ---
  diagnosis-service:
    build: ./diagnosis-service
    container_name: diagnosis-service
    ports:
      - "8083:8083"                     # ‚úÖ M·ªü c·ªïng truy c·∫≠p service
    networks:
      - hospital-net
    depends_on:
      - postgres
      - discovery-server
      - appointment-service
    volumes:
      - diagnosis_data:/app/uploads     # ‚úÖ Volume l∆∞u file b·ªánh √°n
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hospital
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - SERVER_PORT=8086
      - SPRING_APPLICATION_NAME=diagnosis-service
      - UPLOAD_PATH=/app/uploads        # ‚úÖ Tr·ªè bi·∫øn m√¥i tr∆∞·ªùng cho controller ƒë·ªçc file

                    


  # --- NOTIFICATION SERVICE ---
  notification-service:
    build: ./notification-service
    container_name: notification-service
    networks:
      - hospital-net
    depends_on:
      - postgres
      - discovery-server
      - user-service

  # --- RabbitMQ ---
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"      # c·ªïng AMQP (Spring Boot d√πng)
      - "15672:15672"    # giao di·ªán qu·∫£n l√Ω web
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - hospital-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

# --- Networks and Volumes ---
networks:
  hospital-net:

volumes:
  diagnosis_data:     # üß± Volume chung ƒë·ªÉ kh√¥ng m·∫•t file sau restart
  postgres_data:
  rabbitmq_data:
